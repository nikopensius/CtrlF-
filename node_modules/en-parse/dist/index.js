"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const relating_1 = require("./relating");
const repairing_1 = require("./repairing");
const typing_1 = require("./typing");
exports.tree = function (tags, tokens) {
    let nodes = tags.map((tag, i) => nodeFactory(tag, tokens[i], i));
    nodes = typing_1.default(nodes);
    nodes = relating_1.default(nodes, 10);
    nodes = repairing_1.default(nodes);
    return nodes;
};
exports.parse = function (tags, tokens) {
    return toArray(exports.tree(tags, tokens)[0]);
};
function nodeFactory(tag, token, index) {
    return {
        left: [],
        right: [],
        tokens: [token],
        tags: [tag],
        index: [index, index],
        type: tag,
        label: ""
    };
}
function toArray(jsonTree, parent, arr) {
    if (!arr)
        arr = [];
    if (parent === undefined)
        parent = -1;
    var length = jsonTree.index[1] - jsonTree.index[0] + 1;
    while (length) {
        var pos = jsonTree.index[0] + length - 1;
        var thisLabel = jsonTree.label;
        var thisParent = parent;
        if (pos !== jsonTree.index[1]) {
            thisLabel = "EXT";
            thisParent = jsonTree.index[1];
        }
        arr[pos] = {
            label: thisLabel,
            type: jsonTree.type,
            parent: thisParent,
        };
        length--;
    }
    jsonTree.left.forEach((x) => arr = toArray(x, jsonTree.index[1], arr));
    jsonTree.right.forEach((x) => arr = toArray(x, jsonTree.index[1], arr));
    return arr;
}
exports.toArray = toArray;
exports.default = exports.parse;
